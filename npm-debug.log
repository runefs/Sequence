0 info it worked if it ends with ok
1 verbose cli [ '/home/ubuntu/.nvm/v0.10.35/bin/node',
1 verbose cli   '/home/ubuntu/.nvm/v0.10.35/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.35
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/ubuntu/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/ubuntu/.npm/query-js/1.0.0/package.tgz', '.' ]
11 verbose tarball /home/ubuntu/.npm/query-js/1.0.0/package.tgz
12 verbose folder .
13 info prepublish query-js@1.0.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/ubuntu/.npm/1f1177db-tar.lock
16 silly lockFile bbb71a86-u-npm-query-js-1-0-0-package-tgz tar:///home/ubuntu/.npm/query-js/1.0.0/package.tgz
17 verbose lock tar:///home/ubuntu/.npm/query-js/1.0.0/package.tgz /home/ubuntu/.npm/bbb71a86-u-npm-query-js-1-0-0-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile bbb71a86-u-npm-query-js-1-0-0-package-tgz tar:///home/ubuntu/.npm/query-js/1.0.0/package.tgz
21 silly lockFile bbb71a86-u-npm-query-js-1-0-0-package-tgz tar:///home/ubuntu/.npm/query-js/1.0.0/package.tgz
22 silly lockFile 7a0b2071-buntu-npm-query-js-1-0-0-package /home/ubuntu/.npm/query-js/1.0.0/package
23 verbose lock /home/ubuntu/.npm/query-js/1.0.0/package /home/ubuntu/.npm/7a0b2071-buntu-npm-query-js-1-0-0-package.lock
24 silly lockFile 7a0b2071-buntu-npm-query-js-1-0-0-package /home/ubuntu/.npm/query-js/1.0.0/package
25 silly lockFile 7a0b2071-buntu-npm-query-js-1-0-0-package /home/ubuntu/.npm/query-js/1.0.0/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'query-js',
28 silly publish   version: '1.0.0',
28 silly publish   description: 'A module that provides sequence operators for arrays (and sequences). It makes projections and filtering etc easy. It was inspired by LINQ from the.NET platform',
28 silly publish   main: 'query.js',
28 silly publish   dependencies: { chai: '^2.3.0' },
28 silly publish   devDependencies: { mocha: '^2.2.5' },
28 silly publish   scripts: { test: 'mocha' },
28 silly publish   repository: { type: 'git', url: 'https://github.com/runefs/Sequence.git' },
28 silly publish   keywords:
28 silly publish    [ 'linq',
28 silly publish      'sequence',
28 silly publish      'projection',
28 silly publish      'filtering',
28 silly publish      'functional',
28 silly publish      'array',
28 silly publish      'query' ],
28 silly publish   author: { name: 'Rune Funch SÃ¸ltoft' },
28 silly publish   license: 'ISC',
28 silly publish   bugs: { url: 'https://github.com/runefs/query-js/issues' },
28 silly publish   homepage: 'https://github.com/runefs/query-js',
28 silly publish   readme: 'Query-js is a module, that adds sequence operations to javascript. It\'s inspired by the operations available in LINQ,\nbut is not meant as a port.\n\n### <a name="aggregate"></a>aggregate ###\nAggregate is what is also known as a left fold. It applies a function to the element one at a time and passes the result onto the next iteration. If you do not provide a seed undefined is used as seed\n\n\n**Example**\n   ```JavaScript\n   var arr = [1,2,3,4,5],\n       //will be (0)+1+2+3+4+5 aka 15\n       sum = this.aggregate(function (sum, elem) { return sum + elem; }, 0);\n   ```\n   \n### <a name="all"></a>all ###\n\n**Example**\n   ```JavaScript\n   ```\n   \n### <a name="any"></a>any ###\n\n**Example**\n   ```JavaScript\n   ```\n   \n### <a name="count"></a>count ###\n\n**Example**\n   ```JavaScript\n   ```\n### <a name="current"></a>current ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="distinct"></a>distinct ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="each"></a>each ###\n\n**Example**\n   ```JavaScript\n   ```\n   \n### <a name="first"></a>first ###\nReturns the first element of the sequence or if a predicate is provided the first element that meets the criteria\nif no elements can be found it will throw an exception (See [firstOrDefault](#firstOrDefault) if this is not warrented)\n\n**Example**\n    ```JavaScript\n    var arr = [2,3,4];\n         //simply get the list element in the sequence\n         willBeTwo = arr.first();\n         //get the first element, that satisfy the predicate\n         willBeThree = arr.first(function(e){ return e % 2; });\n    ```\n    \n### <a name="firstOrDefault"></a>firstOrDefault ###\nLike [first](#first) but instead of throwing if no elements are found will return a default value. null is returned as default but a specific value can be passed as a paramter\n    \n**Example**\n    ```JavaScript\n    var //will be null\n        defaultValue = [].firstOrDefault();\n        //will be 4\n        defaultValueSpecified = [].firstOrDefault(4);\n        //With predicate\n        defaultValueSpecified = [2,4,6,8].firstOrDefault(function(e){return e % 2;},4);\n    ```\n    \n### <a name="groupBy"></a>groupBy ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="iterate"></a>iterate ###\n\n**Example**\n   ```JavaScript\n   ```\n### <a name="last"></a>last ###\nPick the last element of a sequence. If a predicate is specified, the last element that satisfy the predicate is returned. It will throw if the sequence is empty. If that\'s not warrented then use [lastOrDefault](#lastOrDefault) instead\n\n**Example**\n   ```JavaScript\n   var arr = [1,2,3,4];\n       //simply get the last element of the sequence\n       willBeFour = arr.last();\n       //get the last element that satisfy the predicate\n       wiilBeThree = arr.last(function(e){ return e % 2;});\n   ```\n### <a name="lastOrDefault"></a>lastOrDefault ###\n   \nWorks like [last](#last) except that it will return a default value if there are no elements in the sequence that satisfy the predicate\n\n**Example**\n   ```JavaScript\n   var arr = [1,2,3,4];\n       //simply get the last element of the sequence\n       willBeFour = arr.last();\n       //get the last element that satisfy the predicate\n       wiilBeThree = arr.last(function(e){ return e % 2;});\n   ```\n   \n\n### <a name="max"></a>max ###\n\n**Example**\n   ```JavaScript\n   ```\n### <a name="min"></a>min ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="next"></a>next ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="orderBy"></a>orderBy ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="product"></a>product ###\n\n**Example**\n   ```JavaScript\n   ```\n\n\n### <a name="reset"></a>reset ###\n**Example**\n   ```JavaScript\n   ```\n   \n### <a name="reverse"></a>reverse ###\n\n**Example**\n   ```JavaScript\n   ```\n\n\n### <a name="select"></a>select ###\n\n**Example**\n   ```JavaScript\n   ```\n\n### <a name="single"></a>single ###\nWorks pretty much the same way as [first](#first). However if more than one elements are present it will throw an exception. \nTo be able to know whether or not multiple elements satifying the predicate are present it will have to iterate the entire collection\n\n**Example**\n   ```JavaScript\n   var arr = [1,2,3];\n       //will fail because multiple valid elements exists\n       error = arr.single();\n       //will return because only one element satisfy the predicate\n       willBeTwo = arr.single(function(e){return e % 2 === 0;});\n   ```\n\n### <a name="singleOrDefault"></a>singleOrDefault ###\nWhere [single](#single) works similar to [first](#first). This works similar to [firstOrDefault](#firstOrDefault). If no elements are present it will return a default value. \nJust like [single](#single), if multiple elements are present an exception will be thrown\n\n\n**Example**\n   ```JavaScript\n    var arr = [1,2,3];\n       //will fail because multiple valid elements exists\n       error = arr.singleOrDefault();\n       //will return because only one element satisfy the predicate\n       willBeTwo = arr.singleOrDefault(function(e){return e % 2 === 0;});\n       //will return null because no default are specified\n       willBeNull = arr.singleOrDefault(function(e){ return e > 3;});\n       //will return null because no default are specified\n       willReturnTheDefaultOfFour = arr.singleOrDefault(function(e){ return e > 3;},4);\n   ```\n### <a name="skip"></a>skip ###\n\n**Example**\n   ```JavaScript\n   ```   \n### <a name="sum"></a>sum ###\n\n**Example**\n   ```JavaScript\n   ```\n### <a name="take"></a>take ###\n\n**Example**\n   ```JavaScript\n   ```\n   \n### <a name="where"></a>where ###\n\n**Example**\n   ```JavaScript\n   ```',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: '50acb107d8035dc217f40b94afd20b9b5c24aefc',
28 silly publish   _id: 'query-js@1.0.0',
28 silly publish   _shasum: '1533977be99ae813e0a6bcf4e12f21fc1928f4cd',
28 silly publish   _from: '.' }
29 verbose request where is /query-js
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 503985f8e80a1ff0
32 verbose url raw /query-js
33 verbose url resolving [ 'https://registry.npmjs.org/', './query-js' ]
34 verbose url resolved https://registry.npmjs.org/query-js
35 verbose request where is https://registry.npmjs.org/query-js
36 info trying registry request attempt 1 at 12:41:32
37 http PUT https://registry.npmjs.org/query-js
38 http 403 https://registry.npmjs.org/query-js
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '95',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Tue, 26 May 2015 12:41:35 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-ams4125-AMS',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1432644092.184849,VS0,VE2854' }
40 error publish Failed PUT 403
41 error Error: "You cannot publish over the previously published version 1.0.0." : query-js
41 error     at RegClient.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:442:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.14.13-c9
44 error command "/home/ubuntu/.nvm/v0.10.35/bin/node" "/home/ubuntu/.nvm/v0.10.35/bin/npm" "publish"
45 error cwd /home/ubuntu/workspace
46 error node -v v0.10.35
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
